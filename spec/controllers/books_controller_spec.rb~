require 'spec_helper'

describe BooksController do


  describe "GET 'index'" do   
   
before(:each) do
    truncate_table(ActiveRecord::Base.connection, "books", {})
    truncate_table(ActiveRecord::Base.connection, "volumes", {})
    
    doc_test_first = {:vol_jobid => "123", :bok_bibid => "456"}
    doc_test_first[:bok_title] = "Test Book"
    doc_test_first[:name] = "Test Name"
    
    solr = RSolr.connect :url => SOLR_BOOKS_METADATA
    # remove this book if exists
    solr.delete_by_query('vol_jobid:123')
    solr.commit
    solr.add doc_test_first
    solr.commit
    
    book_test_first = Book.gen(:title => "Test Book", :bibid => "456", :mods => "<xml>xml content</xml>")
    volume_test_first = Volume.gen(:book => book, :job_id => 123)

    doc_test_second = {:vol_jobid => "123", :bok_bibid => "456"}
    doc_test_first[:bok_title] = "Test Book"
    doc_test_first[:name] = "Test Name"
    
    solr = RSolr.connect :url => SOLR_BOOKS_METADATA
    # remove this book if exists
    solr.delete_by_query('vol_jobid:123')
    solr.commit
    solr.add doc_test_first
    solr.commit
    
    book_test_first = Book.gen(:title => "Test Book", :bibid => "456", :mods => "<xml>xml content</xml>")
    volume_test_first = Volume.gen(:book => book, :job_id => 123)

    @response = search_facet_highlight('*:*', 1)
    end
 
   it "should return item count equal to 1" do
	response = search_facet_highlight('vol_jobid:123', 1)

    end


    it "returns http success" do
      get 'index'
      response.should be_success
    end
  end
end
