:javascript  
  $(document).ready(function() {
    var cache;
    cache = {};
    return $("#search_coll_field").autocomplete({
      minLength: 2,
      source: function(request, response) {
        var term;
        term = request.term;
        if (term in cache) {
          response(cache[term]);
          return;
        }
        searchfield = $("#search_coll_field").val();
        return $.getJSON("/collectionautocomplete?term=" + term, request, function(data, status, xhr) {
          return response(data);
        });
      }
    });
  });
  
  function search_collection(){
    if ($("#search_coll_field").val() == ''){
      return;
    }
    else{
      window.location=window.location.href.split('?')[0] + "?search=" + $("#search_coll_field").val();
    }
  }
.row.clearfix
  .col-md-12.column
    .col-md-12
      %h2
        =@page_title
      .col-md-8
        =render :partial => "collections/breadcrumb"
      .input-group.col-md-4.pull-right
        %input.form-control{:id => "search_coll_field", :type=> "text", :onkeypress => "if(event.keyCode == 13){search_collection();return false;}"}
        %span.input-group-btn
          %a.go.pull-left{:style => "cursor:pointer;"}
            %i.fa.fa-arrow-circle-right.fa-2x{:onclick => "search_collection();"}
    .clearfix
    %hr      
  .row
    =render :partial=> "collections/listresult"
    
  - if(!((@page == @lastPage && @lastPage == 1) || @lastPage == 0))
    .col-md-8
      .pagination-centered
        - @pages = adjustPaging(@page, @lastPage)
        = render :partial => "books/paging"