= render :partial => "comments/new_comment", :locals => {:comment_id => nil}
- parent_class = nil
- @comments_replies_list.each do |comment| 
  - if comment.comment_id.nil?
    %span{:id => "abuse#{comment.id}" , :class => get_class_for_abuse(comment.number_of_marks) }
      %p
        = I18n.t(:hidden_comment_msg)
        = link_to_function "show", "$('#comment#{comment.id}').toggle(), $('#abuse#{comment.id}').toggle()"
    
    %span{:id => "comment#{comment.id}" , :class => get_class_for_comment(comment.number_of_marks) }
      = render :partial => "comments/comment", :locals => {:comment => comment}
      
      - replies = Comment.where(:comment_id => comment.id)
      - replies.each do |reply|
        %span{:id => "abuse#{reply.id}" , :class => get_class_for_abuse(reply.number_of_marks) }
          %p
            = I18n.t(:hidden_comment_msg)
            = link_to_function "show", "$('#comment#{reply.id}').toggle(), $('#abuse#{reply.id}').toggle()"
        %span{:id => "comment#{reply.id}" , :class => "#{differ_comment_reply(reply.comment_id)} #{get_class_for_comment(reply.number_of_marks)}" }
          = render :partial => "comments/comment", :locals => {:comment => reply}
      = render :partial => "comments/new_comment",:locals => {:comment_id => comment.id}          
- if(!((@page == @lastPage && @lastPage == 1) || @lastPage == 0))
  - @pages = adjustPaging(@page, @lastPage)
  = render :partial => "books/paging"
