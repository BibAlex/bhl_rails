:javascript
  $(document).ready(function() {
    $( "#change_password" ).click(function() {
      $( "#change_password").toggle();
      $( "#change_password_block").toggle();
    });
  
    $( "#clear" ).click(function() {
      $('#new_user input[type=text]').each(function() {
        $(this).attr("value", '');
      });

      $('#photo_ext_error_message').removeClass("visible_error_msg");
      $('#photo_size_error_message').removeClass("visible_error_msg");
      $('#photo_ext_error_message').addClass("invisible_error_msg");
      $('#photo_size_error_message').addClass("invisible_error_msg");
    });
  });
    
  function check_image_size() {  
    var is_file_valid = true;
    if($('#photo_name')[0] != null){   
      if ($('#photo_name')[0].files[0] != null){           
        var ext = $('#photo_name').val().split('.').pop().toLowerCase();
        var size = $('#photo_name')[0].files[0].size;        
        if($.inArray(ext, ['gif','png','jpg','jpeg', 'bmp']) == -1) {              
          $('#photo_ext_error_message').removeClass("invisible_error_msg");
          $('#photo_ext_error_message').addClass("visible_error_msg");
          $('#photo_size_error_message').removeClass("visible_error_msg");
          $('#photo_size_error_message').addClass("invisible_error_msg");
          is_file_valid = false;
        }
        else{          
          if (size > #{UPLOADED_PHOTO_MAX_SIZE * 1000 * 1000}){            
            $('#photo_ext_error_message').removeClass("visible_error_msg");
            $('#photo_ext_error_message').addClass("invisible_error_msg");
            $('#photo_size_error_message').removeClass("invisible_error_msg");
            $('#photo_size_error_message').addClass("visible_error_msg");
            is_file_valid = false;
          } 
        }
      }
    }
    return is_file_valid;
  }
  
.col-md-12.column
  %div
    %fieldset
      %legend
        = @page_title
      .form-horizontal
        = validation_errors_for(@user)
        = form_for @user, :builder => FormHelper::BHLFormBuilder ,:html => {:onsubmit => "return check_image_size();" } do |f|
          .form-group
            = f.label I18n.t(:username), :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :username, { :class => "required form-control", :id => "username"}
          - if (@action == "signup")
            .form-group
              = f.label I18n.t(:password) , :class => 'col-sm-2 control-label'
              .col-sm-10
                = f.password_field :entered_password, { :type => "password",:class => "required form-control" , :autocomplete =>"off"}
            .form-group
              = f.label I18n.t(:password_confirmation) , :class => 'col-sm-2 control-label'
              .col-sm-10
                = f.password_field :entered_password_confirmation, { :type => "password",:class => "required form-control" , :autocomplete =>"off"}
          - if (@action == "modify")
            %a.btn{:style=> "cursor:pointer;", :id => "change_password"} #{I18n.t(:change_password)}
            %div{:style=> "cursor:pointer;display:none;", :id => "change_password_block"}
              .form-group
                = f.label I18n.t(:old_password) , :class => 'col-sm-2 control-label' 
                .col-sm-10
                  = f.text_field :old_password, { :type => "password",:class => "required form-control" , :autocomplete =>"off"}
              .form-group
                = f.label I18n.t(:new_password) , :class => 'col-sm-2 control-label'
                .col-sm-10
                  = f.password_field :entered_password, { :type => "password",:class => "required form-control" , :autocomplete =>"off"}
              .form-group
                = f.label I18n.t(:new_password_confirmation) , :class => 'col-sm-2 control-label'
                .col-sm-10
                  = f.password_field :entered_password_confirmation, { :type => "password",:class => "required form-control" , :autocomplete =>"off"}
          .form-group
            = f.label I18n.t(:email) , :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :email, { :class => "required form-control" }
          .form-group
            = f.label I18n.t(:email_confirmation) , :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :email_confirmation, { :class => "required form-control" }
          .form-group
            = f.label I18n.t(:real_name), :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :real_name, { :class => "required form-control" }
          - if @verify_captcha
            .form-group
              = f.label I18n.t(:recaptcha), raw(t('recaptcha')), :class => 'required col-sm-2 control-label'
              .col-sm-10
                = recaptcha_tags(display: {theme: 'clean'})
          - if(!(@user.photo_name.blank?))
            - @thumb = @user.photo_name_url(:thumb)
            .form-group
              = f.label I18n.t('profile_photo'), :class => 'col-sm-2 control-label'
              .col-sm-10
                = image_tag("#{@thumb}", :width => 150, :border => 0 )
          .form-group
            = f.label I18n.t('upload_photo'), :class => 'col-sm-2 control-label'
            .col-sm-10
              .invisible_error_msg#photo_size_error_message
                = "#{I18n.t(:upload_photo_max_size_error)} #{UPLOADED_PHOTO_MAX_SIZE} #{I18n.t(:mb)}"
              .invisible_error_msg#photo_ext_error_message
                = "#{I18n.t(:upload_photo_ext_error)}"
              = f.file_field :photo_name, {:id => "photo_name", :type => "file",:class => "btn btn-default"}
              %p.help-block #{I18n.t(:max_photo_size)} #{UPLOADED_PHOTO_MAX_SIZE} #{I18n.t(:mb)}
          .form-group
            .col-sm-2
            .col-sm-10
              - if (@action == "signup")
                = f.submit I18n.t('header_signup'), :class => "btn btn-primary", :id => "submit"
              - else
                = f.submit I18n.t('header_login'), :class => "btn btn-primary", :id => "submit"
              - if (@action == "modify")
                = f.submit I18n.t('reset_button'), :class => "btn btn-default",:id => "clear", :type => "reset"
              - else
                = f.submit I18n.t('clear_button'), :class => "btn btn-default",:id => "clear", :type => "reset"