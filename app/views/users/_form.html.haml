:javascript
  function check_image_size() {
  var is_file_valid = true;
  if ($('#filefield')[0].files[0] != null){
    var ext = $('#filefield').val().split('.').pop().toLowerCase();
    var size = $('#filefield')[0].files[0].size;
    if($.inArray(ext, ['gif','png','jpg','jpeg', 'bmp']) == -1) {
      $('#photo_ext_error_message').removeClass("invisible_error_msg");
      $('#photo_ext_error_message').addClass("visible_error_msg");
      $('#photo_size_error_message').removeClass("visible_error_msg");
      $('#photo_size_error_message').addClass("invisible_error_msg");
      is_file_valid = false;
    }
    else{
      if (size > #{UPLOADED_PHOTO_MAX_SIZE * 1000 * 1000}){
        $('#photo_ext_error_message').removeClass("visible_error_msg");
        $('#photo_ext_error_message').addClass("invisible_error_msg");
        $('#photo_size_error_message').removeClass("invisible_error_msg");
        $('#photo_size_error_message').addClass("visible_error_msg");
        is_file_valid = false;
      }
    }
    }
    return is_file_valid;
  }
  
.col-md-8.column
  %div
    %fieldset
      %legend
        = @page_title
      .form-horizontal
        = validation_errors_for(@user)
        = form_for @user, :builder => FormHelper::BHLFormBuilder ,:html => {:onsubmit => "return check_image_size();"} do |f|
          .form-group
            = f.label I18n.t(:username), :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :username, { :class => "required form-control" }
          .form-group
            = f.label I18n.t(:password) , :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.password_field :entered_password, { :type => "password",:class => "required form-control" }
          .form-group
            = f.label I18n.t(:password_confirmation) , :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.password_field :entered_password_confirmation, { :type => "password",:class => "required form-control" }
          .form-group
            = f.label I18n.t(:email) , :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :email, { :class => "required form-control" }
          .form-group
            = f.label I18n.t(:email_confirmation) , :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :email_confirmation, { :class => "required form-control" }
          .form-group
            = f.label I18n.t(:real_name), :class => 'col-sm-2 control-label'
            .col-sm-10
              = f.text_field :real_name, { :class => "required form-control" }
          - if @verify_captcha
            .form-group
              = f.label :recaptcha, raw(t('recaptcha')), :class => 'required col-sm-2 control-label'
              .col-sm-10
                = recaptcha_tags(display: {theme: 'clean'})
          - if(!(@user.photo_name.blank?))
            - @thumb = @user.photo_name_url(:thumb)
            .form-group
              = f.label I18n.t('profile_photo'), :class => 'col-sm-2 control-label'
              .col-sm-10
                = image_tag("#{@thumb}", :width => 150, :border => 0 )
                = check_box_tag "delete_photo"
                = I18n.t(:delete_photo)
          .form-group
            = f.label I18n.t('upload_photo'), :class => 'col-sm-2 control-label'
            .col-sm-10
              .invisible_error_msg#photo_size_error_message
                = "#{I18n.t(:upload_photo_max_size_error)} #{UPLOADED_PHOTO_MAX_SIZE} #{I18n.t(:mb)}"
              .invisible_error_msg#photo_ext_error_message
                = "#{I18n.t(:upload_photo_ext_error)}"
              = f.file_field :photo_name, {:id => "filefield", :type => "file",:class => "btn btn-default"}
              %p.help-block #{I18n.t(:max_photo_size)} #{UPLOADED_PHOTO_MAX_SIZE} #{I18n.t(:mb)}
          .form-group
            .col-sm-2
            .col-sm-10
              = f.submit I18n.t('submit_buton'), :class => "btn btn-primary"
              = f.submit I18n.t('clear_button'), :class => "btn btn-default", :type => "reset"
